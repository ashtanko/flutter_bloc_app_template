name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  test-app:
    name: App
    timeout-minutes: 40

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter version
        run: flutter --version

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download pub dependencies
        run: flutter pub get

      #      - name: Pub Global
      #        run: dart pub global activate flutter_gen

      #      - name: Build runner
      #        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      #      - name: Generate intl
      #        run: flutter pub run intl_utils:generate

      #      - name: Run fluttergen
      #        run: fluttergen -c pubspec.yaml

      - name: Run analyzer
        run: flutter analyze

      #      - name: Run Dart code metrics
      #        run: flutter pub run dart_code_metrics:metrics analyze lib

      - name: Run tests
        run: flutter test --coverage

#      - name: Create Android emulator
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 28
#          target: google_apis
#          arch: x86_64
#          profile: Nexus 6
#          script: |
#            flutter test integration_test/app_test.dart --flavor dev --timeout none
#
#            echo "Closing connection with emulator-5554"
#            adb -s emulator-5554 emu kill || true
#
#            echo "Closing connection with emulator-5556"
#            adb -s emulator-5556 emu kill || true

      - name: Install lcov
        run: sudo apt-get install -y lcov

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: build/

      - name: Install lcov
        run: sudo apt-get install -y lcov

      - name: Remove generated files from code coverage report
        run: lcov --remove coverage/lcov.info 'lib/*/*.gen.dart' 'lib/generated/*.dart' 'lib/generated/*/*.dart' 'lib/di/*.dart' '**/lib/constants/' 'lib/constants/*.dart' -o coverage/lcov.info --ignore-errors unused

      - name: Remove router from code coverage report
        run: lcov --remove coverage/lcov.info 'lib/routers/router.dart' -o coverage/lcov.info --ignore-errors unused

      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v1.2.0
        with:
          path: coverage/lcov.info
          min_coverage: 59
          exclude: '**/*.g.dart **/*.gen.dart **/lib/di/ lib/generated/ **/lib/generated/ lib/di/*.dart **/lib/constants/ lib/constants/*.dart/ lib/routers/router.dart'

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage/lcov.info

  integration_tests:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - uses: futureware-tech/simulator-action@v4
        with:
          model: 'iPhone 16 Pro'

      # Pre-building the app serves two purposes:
      # 1. Verifies that the app builds successfully before running integration tests.
      # 2. Speeds up the integration test startup, reducing the risk of test timeouts.
      - name: Pre-build the app
        run: flutter build ios --simulator --target=integration_test/app_test.dart --flavor dev

      - name: Run integration tests
        run: flutter test integration_test/app_test.dart --flavor dev --timeout none
